const c = require(BASE_DIR_GET('/libs/config.js'));
const FS = require('fs');
const LOG = require(BASE_DIR_GET('/libs/log.js'));
const sha1 = require('sha1');
const googleAuthLibrary = require('google-auth-library');
const oauth2Client = new googleAuthLibrary.OAuth2Client(c.google.clientId, c.google.secret, c.google.redirectUrl);

module.exports = function (webserver, endpoint) {

	/**
	 * Google login:
	 * - redirect to the google login page (if no req.query.code is available)
	 * - handling redirect back from Google page (req.query.code is available)
	 *
	 * @return HTML text if error
	 * @return redirect if ok
	 */
	webserver.get(endpoint, function (req, res) {
		res.clearCookie(c.http.login.name);
		let code = req.query.code;
		// Non-logged user (dont have cookie) wants to login. Generate Google login URL and redirect to it.
		// If is login successfull, user will be redirected back with req.code filled
		if (code === undefined) {
			res.redirect(oauth2Client.generateAuthUrl({
				scope: 'email'
			}));
			return;
		}
		code = code.replace('\\', '/'); // Probably bug, backslash has to be escaped
		// User was redirected after success login. Check this code with Google and if is ok, save info about user in
		// file name generated by hash of code
		oauth2Client.getToken(code, function (errGetToken, tokens, response) {
			if (errGetToken) {
				LOG.error('(Login) Error while loading Google token: ' + errGetToken + '. More info in debug.');
				try {
					LOG.debug('(Login) ' + JSON.stringify(response));
				} catch (error) {
					LOG.debug('(Login) Error while parsing response while loading Google token.');
				}
				res.status(500).send('Chyba behem ziskavani google tokenu. Zkus to <a href="/login">znovu</a> nebo kontaktuj admina.<br><a href="/logout">Odhlasit</a>');
				return;
			}
			// Check token and get user email
			oauth2Client.verifyIdToken({idToken: tokens.id_token}, function (errVerifyToken, login) {
				if (errVerifyToken) {
					LOG.error('(Login) Error while verifying Google token: ' + errVerifyToken);
					res.status(500).send('Chyba behem ziskavani google tokenu. Zkus to <a href="/login">znovu</a> nebo kontaktuj admina.<br><a href="/logout">Odhlasit</a>');
					return;
				}
				// Load info about user from Google
				let payload = login.getPayload();
				LOG.info('(Login) Logged user "' + payload.email + '".');
				let tokenHash = sha1(tokens.id_token);

				FS.writeFileSync(c.http.login.tokensPath + tokenHash + '.txt', JSON.stringify({
					logged_time: new Date().getTime(),
					token_id: tokens.id_token,
					token_hash: tokenHash,
					ip: req.ip,
					email: payload.email
				}), 'utf8');
				res.cookie(c.http.login.name, tokenHash, {expires: new Date(253402300000000)});
				res.redirect('/');
			});
		});
	});
};
